
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA DIVIDE ELSE EQUALS FLOAT FLOATN GE GT ID IF INT INTEGER LBRACES LE LPAREN LT MAIN MINUS NE PLUS POWER RBRACES RPAREN SEMI SEMICOLON STRING TIMESinicio : INT MAIN LPAREN RPAREN blocoprincipalconteudo : declaracoes conteudo\n                | atribuicoes conteudo\n                | if conteudo \n                | else conteudo\n                | emptyblocoprincipal : LBRACES conteudo RBRACESids : COMMA ID\n            | COMMA ID idsempty :declaracoes : tipo ID SEMICOLON\n                    | tipo ID SEMICOLON declaracoes\n                    | tipo ID ids SEMICOLON declaracoes\n                    | tipo ID EQUALS INTEGER SEMICOLON declaracoes\n                    | tipo ID EQUALS FLOATN SEMICOLON declaracoes\n                    | emptyatribuicoes : ID EQUALS INTEGER SEMICOLON\n                    | ID EQUALS FLOATN SEMICOLONcondicao : ID LT INTEGER\n                | ID LE INTEGER \n                | ID LT FLOATN\n                | ID GT INTEGER \n                | ID GE FLOATN\n                | ID GE INTEGER \n                | ID GT FLOATN\n                | ID LE FLOATNbloco : LBRACES atribuicoes RBRACES\n            | LBRACES operacao RBRACESif   : IF LPAREN condicao RPAREN blocoelse : ELSE LBRACES bloco RBRACESoperador : PLUS\n                | MINUS\n                | TIMES\n                | POWER\n                | DIVIDEoperacao : ID EQUALS ID operador ID SEMICOLON operacao \n                | ID EQUALS ID operador INTEGER SEMICOLON operacao\n                | ID EQUALS ID operador FLOATN SEMICOLON operacao\n                | ID EQUALS INTEGER operador INTEGER SEMICOLON operacao\n                | ID EQUALS FLOATN operador INTEGER SEMICOLON operacao\n                | ID EQUALS INTEGER operador ID SEMICOLON operacao\n                | ID EQUALS FLOATN operador ID SEMICOLON operacao\n                | emptytipo : INT\n            | FLOAT '
    
_lr_action_items = {'INT':([0,7,9,10,11,12,13,29,39,40,41,45,46,56,57,58,59,61,70,71,73,74,],[2,18,18,18,18,18,-16,18,-12,-16,18,-17,-18,-30,-13,18,18,-29,-27,-28,-14,-15,]),'$end':([1,6,20,],[0,-1,-7,]),'MAIN':([2,],[3,]),'LPAREN':([3,16,],[4,27,]),'RPAREN':([4,35,62,63,64,65,66,67,68,69,],[5,47,-19,-21,-20,-26,-22,-25,-23,-24,]),'LBRACES':([5,17,28,47,],[7,28,37,37,]),'ID':([7,9,10,11,12,13,14,18,19,27,29,32,37,39,40,41,45,46,56,57,58,59,61,70,71,72,73,74,78,79,80,81,82,83,84,85,93,94,95,96,97,98,99,108,],[15,15,15,15,15,-16,25,-44,-45,36,-10,44,54,-12,-16,-10,-17,-18,-30,-13,-10,-10,-29,-27,-28,75,-14,-15,86,-31,-32,-33,-34,-35,89,91,100,100,100,100,100,100,100,75,]),'IF':([7,9,10,11,12,13,29,39,40,41,45,46,56,57,58,59,61,70,71,73,74,],[16,16,16,16,16,-16,-10,-12,-16,-10,-17,-18,-30,-13,-10,-10,-29,-27,-28,-14,-15,]),'ELSE':([7,9,10,11,12,13,29,39,40,41,45,46,56,57,58,59,61,70,71,73,74,],[17,17,17,17,17,-16,-10,-12,-16,-10,-17,-18,-30,-13,-10,-10,-29,-27,-28,-14,-15,]),'RBRACES':([7,8,9,10,11,12,13,21,22,23,24,29,37,38,39,40,41,45,46,52,53,55,56,57,58,59,61,70,71,73,74,93,94,95,96,97,98,99,101,102,103,104,105,106,107,],[-10,20,-10,-10,-10,-10,-6,-2,-3,-4,-5,-10,-10,56,-12,-16,-10,-17,-18,70,71,-43,-30,-13,-10,-10,-29,-27,-28,-14,-15,-10,-10,-10,-10,-10,-10,-10,-36,-37,-38,-41,-39,-42,-40,]),'FLOAT':([7,9,10,11,12,13,29,39,40,41,45,46,56,57,58,59,61,70,71,73,74,],[19,19,19,19,19,-16,19,-12,-16,19,-17,-18,-30,-13,19,19,-29,-27,-28,-14,-15,]),'EQUALS':([15,25,54,100,],[26,31,72,108,]),'SEMICOLON':([25,30,33,34,42,43,44,60,76,77,86,87,88,89,90,91,92,],[29,41,45,46,58,59,-8,-9,45,46,93,94,95,96,97,98,99,]),'COMMA':([25,44,],[32,32,]),'INTEGER':([26,31,48,49,50,51,72,78,79,80,81,82,83,84,85,108,],[33,42,62,64,66,69,76,87,-31,-32,-33,-34,-35,90,92,109,]),'FLOATN':([26,31,48,49,50,51,72,78,79,80,81,82,83,108,],[34,43,63,65,67,68,77,88,-31,-32,-33,-34,-35,110,]),'LT':([36,],[48,]),'LE':([36,],[49,]),'GT':([36,],[50,]),'GE':([36,],[51,]),'PLUS':([75,76,77,109,110,],[79,79,79,79,79,]),'MINUS':([75,76,77,109,110,],[80,80,80,80,80,]),'TIMES':([75,76,77,109,110,],[81,81,81,81,81,]),'POWER':([75,76,77,109,110,],[82,82,82,82,82,]),'DIVIDE':([75,76,77,109,110,],[83,83,83,83,83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'blocoprincipal':([5,],[6,]),'conteudo':([7,9,10,11,12,],[8,21,22,23,24,]),'declaracoes':([7,9,10,11,12,29,41,58,59,],[9,9,9,9,9,39,57,73,74,]),'atribuicoes':([7,9,10,11,12,37,],[10,10,10,10,10,52,]),'if':([7,9,10,11,12,],[11,11,11,11,11,]),'else':([7,9,10,11,12,],[12,12,12,12,12,]),'empty':([7,9,10,11,12,29,37,41,58,59,93,94,95,96,97,98,99,],[13,13,13,13,13,40,55,40,40,40,55,55,55,55,55,55,55,]),'tipo':([7,9,10,11,12,29,41,58,59,],[14,14,14,14,14,14,14,14,14,]),'ids':([25,44,],[30,60,]),'condicao':([27,],[35,]),'bloco':([28,47,],[38,61,]),'operacao':([37,93,94,95,96,97,98,99,],[53,101,102,103,104,105,106,107,]),'operador':([75,76,77,109,110,],[78,84,85,84,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> INT MAIN LPAREN RPAREN blocoprincipal','inicio',5,'p_inicio','complador.py',76),
  ('conteudo -> declaracoes conteudo','conteudo',2,'p_conteudo','complador.py',79),
  ('conteudo -> atribuicoes conteudo','conteudo',2,'p_conteudo','complador.py',80),
  ('conteudo -> if conteudo','conteudo',2,'p_conteudo','complador.py',81),
  ('conteudo -> else conteudo','conteudo',2,'p_conteudo','complador.py',82),
  ('conteudo -> empty','conteudo',1,'p_conteudo','complador.py',83),
  ('blocoprincipal -> LBRACES conteudo RBRACES','blocoprincipal',3,'p_blocoprincipal','complador.py',86),
  ('ids -> COMMA ID','ids',2,'p_ids','complador.py',89),
  ('ids -> COMMA ID ids','ids',3,'p_ids','complador.py',90),
  ('empty -> <empty>','empty',0,'p_empty','complador.py',93),
  ('declaracoes -> tipo ID SEMICOLON','declaracoes',3,'p_declaracoes','complador.py',97),
  ('declaracoes -> tipo ID SEMICOLON declaracoes','declaracoes',4,'p_declaracoes','complador.py',98),
  ('declaracoes -> tipo ID ids SEMICOLON declaracoes','declaracoes',5,'p_declaracoes','complador.py',99),
  ('declaracoes -> tipo ID EQUALS INTEGER SEMICOLON declaracoes','declaracoes',6,'p_declaracoes','complador.py',100),
  ('declaracoes -> tipo ID EQUALS FLOATN SEMICOLON declaracoes','declaracoes',6,'p_declaracoes','complador.py',101),
  ('declaracoes -> empty','declaracoes',1,'p_declaracoes','complador.py',102),
  ('atribuicoes -> ID EQUALS INTEGER SEMICOLON','atribuicoes',4,'p_atribuicoes','complador.py',105),
  ('atribuicoes -> ID EQUALS FLOATN SEMICOLON','atribuicoes',4,'p_atribuicoes','complador.py',106),
  ('condicao -> ID LT INTEGER','condicao',3,'p_condicao','complador.py',109),
  ('condicao -> ID LE INTEGER','condicao',3,'p_condicao','complador.py',110),
  ('condicao -> ID LT FLOATN','condicao',3,'p_condicao','complador.py',111),
  ('condicao -> ID GT INTEGER','condicao',3,'p_condicao','complador.py',112),
  ('condicao -> ID GE FLOATN','condicao',3,'p_condicao','complador.py',113),
  ('condicao -> ID GE INTEGER','condicao',3,'p_condicao','complador.py',114),
  ('condicao -> ID GT FLOATN','condicao',3,'p_condicao','complador.py',115),
  ('condicao -> ID LE FLOATN','condicao',3,'p_condicao','complador.py',116),
  ('bloco -> LBRACES atribuicoes RBRACES','bloco',3,'p_bloco','complador.py',119),
  ('bloco -> LBRACES operacao RBRACES','bloco',3,'p_bloco','complador.py',120),
  ('if -> IF LPAREN condicao RPAREN bloco','if',5,'p_if','complador.py',123),
  ('else -> ELSE LBRACES bloco RBRACES','else',4,'p_else','complador.py',126),
  ('operador -> PLUS','operador',1,'p_operador','complador.py',129),
  ('operador -> MINUS','operador',1,'p_operador','complador.py',130),
  ('operador -> TIMES','operador',1,'p_operador','complador.py',131),
  ('operador -> POWER','operador',1,'p_operador','complador.py',132),
  ('operador -> DIVIDE','operador',1,'p_operador','complador.py',133),
  ('operacao -> ID EQUALS ID operador ID SEMICOLON operacao','operacao',7,'p_operacao','complador.py',136),
  ('operacao -> ID EQUALS ID operador INTEGER SEMICOLON operacao','operacao',7,'p_operacao','complador.py',137),
  ('operacao -> ID EQUALS ID operador FLOATN SEMICOLON operacao','operacao',7,'p_operacao','complador.py',138),
  ('operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON operacao','operacao',7,'p_operacao','complador.py',139),
  ('operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON operacao','operacao',7,'p_operacao','complador.py',140),
  ('operacao -> ID EQUALS INTEGER operador ID SEMICOLON operacao','operacao',7,'p_operacao','complador.py',141),
  ('operacao -> ID EQUALS FLOATN operador ID SEMICOLON operacao','operacao',7,'p_operacao','complador.py',142),
  ('operacao -> empty','operacao',1,'p_operacao','complador.py',143),
  ('tipo -> INT','tipo',1,'p_tipo','complador.py',146),
  ('tipo -> FLOAT','tipo',1,'p_tipo','complador.py',147),
]
