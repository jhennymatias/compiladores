Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NE
    SEMI
    STRING

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> INT MAIN LPAREN RPAREN blocoprincipal
Rule 2     conteudo -> declaracoes conteudo
Rule 3     conteudo -> atribuicoes conteudo
Rule 4     conteudo -> if conteudo
Rule 5     conteudo -> else conteudo
Rule 6     conteudo -> empty
Rule 7     blocoprincipal -> LBRACES conteudo RBRACES
Rule 8     ids -> COMMA ID
Rule 9     ids -> COMMA ID ids
Rule 10    empty -> <empty>
Rule 11    declaracoes -> tipo ID SEMICOLON
Rule 12    declaracoes -> tipo ID SEMICOLON declaracoes
Rule 13    declaracoes -> tipo ID ids SEMICOLON declaracoes
Rule 14    declaracoes -> tipo ID EQUALS INTEGER SEMICOLON declaracoes
Rule 15    declaracoes -> tipo ID EQUALS FLOATN SEMICOLON declaracoes
Rule 16    declaracoes -> empty
Rule 17    atribuicoes -> ID EQUALS INTEGER SEMICOLON
Rule 18    atribuicoes -> ID EQUALS FLOATN SEMICOLON
Rule 19    condicao -> ID LT INTEGER
Rule 20    condicao -> ID LE INTEGER
Rule 21    condicao -> ID LT FLOATN
Rule 22    condicao -> ID GT INTEGER
Rule 23    condicao -> ID GE FLOATN
Rule 24    condicao -> ID GE INTEGER
Rule 25    condicao -> ID GT FLOATN
Rule 26    condicao -> ID LE FLOATN
Rule 27    bloco -> LBRACES atribuicoes RBRACES
Rule 28    bloco -> LBRACES operacao RBRACES
Rule 29    if -> IF LPAREN condicao RPAREN bloco
Rule 30    else -> ELSE LBRACES bloco RBRACES
Rule 31    operador -> PLUS
Rule 32    operador -> MINUS
Rule 33    operador -> TIMES
Rule 34    operador -> POWER
Rule 35    operador -> DIVIDE
Rule 36    operacao -> ID EQUALS ID operador ID SEMICOLON operacao
Rule 37    operacao -> ID EQUALS ID operador INTEGER SEMICOLON operacao
Rule 38    operacao -> ID EQUALS ID operador FLOATN SEMICOLON operacao
Rule 39    operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
Rule 40    operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
Rule 41    operacao -> ID EQUALS INTEGER operador ID SEMICOLON operacao
Rule 42    operacao -> ID EQUALS FLOATN operador ID SEMICOLON operacao
Rule 43    operacao -> empty
Rule 44    tipo -> INT
Rule 45    tipo -> FLOAT

Terminals, with rules where they appear

COMMA                : 8 9
DIVIDE               : 35
ELSE                 : 30
EQUALS               : 14 15 17 18 36 37 38 39 40 41 42
FLOAT                : 45
FLOATN               : 15 18 21 23 25 26 38 40 42
GE                   : 23 24
GT                   : 22 25
ID                   : 8 9 11 12 13 14 15 17 18 19 20 21 22 23 24 25 26 36 36 36 37 37 38 38 39 40 41 41 42 42
IF                   : 29
INT                  : 1 44
INTEGER              : 14 17 19 20 22 24 37 39 39 40 41
LBRACES              : 7 27 28 30
LE                   : 20 26
LPAREN               : 1 29
LT                   : 19 21
MAIN                 : 1
MINUS                : 32
NE                   : 
PLUS                 : 31
POWER                : 34
RBRACES              : 7 27 28 30
RPAREN               : 1 29
SEMI                 : 
SEMICOLON            : 11 12 13 14 15 17 18 36 37 38 39 40 41 42
STRING               : 
TIMES                : 33
error                : 

Nonterminals, with rules where they appear

atribuicoes          : 3 27
bloco                : 29 30
blocoprincipal       : 1
condicao             : 29
conteudo             : 2 3 4 5 7
declaracoes          : 2 12 13 14 15
else                 : 5
empty                : 6 16 43
ids                  : 9 13
if                   : 4
inicio               : 0
operacao             : 28 36 37 38 39 40 41 42
operador             : 36 37 38 39 40 41 42
tipo                 : 11 12 13 14 15

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . INT MAIN LPAREN RPAREN blocoprincipal

    INT             shift and go to state 2

    inicio                         shift and go to state 1

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> INT . MAIN LPAREN RPAREN blocoprincipal

    MAIN            shift and go to state 3


state 3

    (1) inicio -> INT MAIN . LPAREN RPAREN blocoprincipal

    LPAREN          shift and go to state 4


state 4

    (1) inicio -> INT MAIN LPAREN . RPAREN blocoprincipal

    RPAREN          shift and go to state 5


state 5

    (1) inicio -> INT MAIN LPAREN RPAREN . blocoprincipal
    (7) blocoprincipal -> . LBRACES conteudo RBRACES

    LBRACES         shift and go to state 7

    blocoprincipal                 shift and go to state 6

state 6

    (1) inicio -> INT MAIN LPAREN RPAREN blocoprincipal .

    $end            reduce using rule 1 (inicio -> INT MAIN LPAREN RPAREN blocoprincipal .)


state 7

    (7) blocoprincipal -> LBRACES . conteudo RBRACES
    (2) conteudo -> . declaracoes conteudo
    (3) conteudo -> . atribuicoes conteudo
    (4) conteudo -> . if conteudo
    (5) conteudo -> . else conteudo
    (6) conteudo -> . empty
    (11) declaracoes -> . tipo ID SEMICOLON
    (12) declaracoes -> . tipo ID SEMICOLON declaracoes
    (13) declaracoes -> . tipo ID ids SEMICOLON declaracoes
    (14) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON declaracoes
    (16) declaracoes -> . empty
    (17) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (18) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (29) if -> . IF LPAREN condicao RPAREN bloco
    (30) else -> . ELSE LBRACES bloco RBRACES
    (10) empty -> .
    (44) tipo -> . INT
    (45) tipo -> . FLOAT

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 15
    IF              shift and go to state 16
    ELSE            shift and go to state 17
    RBRACES         reduce using rule 10 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

  ! ID              [ reduce using rule 10 (empty -> .) ]
  ! IF              [ reduce using rule 10 (empty -> .) ]
  ! ELSE            [ reduce using rule 10 (empty -> .) ]
  ! INT             [ reduce using rule 10 (empty -> .) ]
  ! FLOAT           [ reduce using rule 10 (empty -> .) ]

    conteudo                       shift and go to state 8
    declaracoes                    shift and go to state 9
    atribuicoes                    shift and go to state 10
    if                             shift and go to state 11
    else                           shift and go to state 12
    empty                          shift and go to state 13
    tipo                           shift and go to state 14

state 8

    (7) blocoprincipal -> LBRACES conteudo . RBRACES

    RBRACES         shift and go to state 20


state 9

    (2) conteudo -> declaracoes . conteudo
    (2) conteudo -> . declaracoes conteudo
    (3) conteudo -> . atribuicoes conteudo
    (4) conteudo -> . if conteudo
    (5) conteudo -> . else conteudo
    (6) conteudo -> . empty
    (11) declaracoes -> . tipo ID SEMICOLON
    (12) declaracoes -> . tipo ID SEMICOLON declaracoes
    (13) declaracoes -> . tipo ID ids SEMICOLON declaracoes
    (14) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON declaracoes
    (16) declaracoes -> . empty
    (17) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (18) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (29) if -> . IF LPAREN condicao RPAREN bloco
    (30) else -> . ELSE LBRACES bloco RBRACES
    (10) empty -> .
    (44) tipo -> . INT
    (45) tipo -> . FLOAT

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 15
    IF              shift and go to state 16
    ELSE            shift and go to state 17
    RBRACES         reduce using rule 10 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

  ! ID              [ reduce using rule 10 (empty -> .) ]
  ! IF              [ reduce using rule 10 (empty -> .) ]
  ! ELSE            [ reduce using rule 10 (empty -> .) ]
  ! INT             [ reduce using rule 10 (empty -> .) ]
  ! FLOAT           [ reduce using rule 10 (empty -> .) ]

    declaracoes                    shift and go to state 9
    conteudo                       shift and go to state 21
    atribuicoes                    shift and go to state 10
    if                             shift and go to state 11
    else                           shift and go to state 12
    empty                          shift and go to state 13
    tipo                           shift and go to state 14

state 10

    (3) conteudo -> atribuicoes . conteudo
    (2) conteudo -> . declaracoes conteudo
    (3) conteudo -> . atribuicoes conteudo
    (4) conteudo -> . if conteudo
    (5) conteudo -> . else conteudo
    (6) conteudo -> . empty
    (11) declaracoes -> . tipo ID SEMICOLON
    (12) declaracoes -> . tipo ID SEMICOLON declaracoes
    (13) declaracoes -> . tipo ID ids SEMICOLON declaracoes
    (14) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON declaracoes
    (16) declaracoes -> . empty
    (17) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (18) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (29) if -> . IF LPAREN condicao RPAREN bloco
    (30) else -> . ELSE LBRACES bloco RBRACES
    (10) empty -> .
    (44) tipo -> . INT
    (45) tipo -> . FLOAT

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 15
    IF              shift and go to state 16
    ELSE            shift and go to state 17
    RBRACES         reduce using rule 10 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

  ! ID              [ reduce using rule 10 (empty -> .) ]
  ! IF              [ reduce using rule 10 (empty -> .) ]
  ! ELSE            [ reduce using rule 10 (empty -> .) ]
  ! INT             [ reduce using rule 10 (empty -> .) ]
  ! FLOAT           [ reduce using rule 10 (empty -> .) ]

    atribuicoes                    shift and go to state 10
    conteudo                       shift and go to state 22
    declaracoes                    shift and go to state 9
    if                             shift and go to state 11
    else                           shift and go to state 12
    empty                          shift and go to state 13
    tipo                           shift and go to state 14

state 11

    (4) conteudo -> if . conteudo
    (2) conteudo -> . declaracoes conteudo
    (3) conteudo -> . atribuicoes conteudo
    (4) conteudo -> . if conteudo
    (5) conteudo -> . else conteudo
    (6) conteudo -> . empty
    (11) declaracoes -> . tipo ID SEMICOLON
    (12) declaracoes -> . tipo ID SEMICOLON declaracoes
    (13) declaracoes -> . tipo ID ids SEMICOLON declaracoes
    (14) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON declaracoes
    (16) declaracoes -> . empty
    (17) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (18) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (29) if -> . IF LPAREN condicao RPAREN bloco
    (30) else -> . ELSE LBRACES bloco RBRACES
    (10) empty -> .
    (44) tipo -> . INT
    (45) tipo -> . FLOAT

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 15
    IF              shift and go to state 16
    ELSE            shift and go to state 17
    RBRACES         reduce using rule 10 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

  ! ID              [ reduce using rule 10 (empty -> .) ]
  ! IF              [ reduce using rule 10 (empty -> .) ]
  ! ELSE            [ reduce using rule 10 (empty -> .) ]
  ! INT             [ reduce using rule 10 (empty -> .) ]
  ! FLOAT           [ reduce using rule 10 (empty -> .) ]

    if                             shift and go to state 11
    conteudo                       shift and go to state 23
    declaracoes                    shift and go to state 9
    atribuicoes                    shift and go to state 10
    else                           shift and go to state 12
    empty                          shift and go to state 13
    tipo                           shift and go to state 14

state 12

    (5) conteudo -> else . conteudo
    (2) conteudo -> . declaracoes conteudo
    (3) conteudo -> . atribuicoes conteudo
    (4) conteudo -> . if conteudo
    (5) conteudo -> . else conteudo
    (6) conteudo -> . empty
    (11) declaracoes -> . tipo ID SEMICOLON
    (12) declaracoes -> . tipo ID SEMICOLON declaracoes
    (13) declaracoes -> . tipo ID ids SEMICOLON declaracoes
    (14) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON declaracoes
    (16) declaracoes -> . empty
    (17) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (18) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (29) if -> . IF LPAREN condicao RPAREN bloco
    (30) else -> . ELSE LBRACES bloco RBRACES
    (10) empty -> .
    (44) tipo -> . INT
    (45) tipo -> . FLOAT

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 15
    IF              shift and go to state 16
    ELSE            shift and go to state 17
    RBRACES         reduce using rule 10 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

  ! ID              [ reduce using rule 10 (empty -> .) ]
  ! IF              [ reduce using rule 10 (empty -> .) ]
  ! ELSE            [ reduce using rule 10 (empty -> .) ]
  ! INT             [ reduce using rule 10 (empty -> .) ]
  ! FLOAT           [ reduce using rule 10 (empty -> .) ]

    else                           shift and go to state 12
    conteudo                       shift and go to state 24
    declaracoes                    shift and go to state 9
    atribuicoes                    shift and go to state 10
    if                             shift and go to state 11
    empty                          shift and go to state 13
    tipo                           shift and go to state 14

state 13

    (6) conteudo -> empty .
    (16) declaracoes -> empty .

  ! reduce/reduce conflict for RBRACES resolved using rule 6 (conteudo -> empty .)
    RBRACES         reduce using rule 6 (conteudo -> empty .)
    ID              reduce using rule 16 (declaracoes -> empty .)
    IF              reduce using rule 16 (declaracoes -> empty .)
    ELSE            reduce using rule 16 (declaracoes -> empty .)
    INT             reduce using rule 16 (declaracoes -> empty .)
    FLOAT           reduce using rule 16 (declaracoes -> empty .)

  ! RBRACES         [ reduce using rule 16 (declaracoes -> empty .) ]


state 14

    (11) declaracoes -> tipo . ID SEMICOLON
    (12) declaracoes -> tipo . ID SEMICOLON declaracoes
    (13) declaracoes -> tipo . ID ids SEMICOLON declaracoes
    (14) declaracoes -> tipo . ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> tipo . ID EQUALS FLOATN SEMICOLON declaracoes

    ID              shift and go to state 25


state 15

    (17) atribuicoes -> ID . EQUALS INTEGER SEMICOLON
    (18) atribuicoes -> ID . EQUALS FLOATN SEMICOLON

    EQUALS          shift and go to state 26


state 16

    (29) if -> IF . LPAREN condicao RPAREN bloco

    LPAREN          shift and go to state 27


state 17

    (30) else -> ELSE . LBRACES bloco RBRACES

    LBRACES         shift and go to state 28


state 18

    (44) tipo -> INT .

    ID              reduce using rule 44 (tipo -> INT .)


state 19

    (45) tipo -> FLOAT .

    ID              reduce using rule 45 (tipo -> FLOAT .)


state 20

    (7) blocoprincipal -> LBRACES conteudo RBRACES .

    $end            reduce using rule 7 (blocoprincipal -> LBRACES conteudo RBRACES .)


state 21

    (2) conteudo -> declaracoes conteudo .

    RBRACES         reduce using rule 2 (conteudo -> declaracoes conteudo .)


state 22

    (3) conteudo -> atribuicoes conteudo .

    RBRACES         reduce using rule 3 (conteudo -> atribuicoes conteudo .)


state 23

    (4) conteudo -> if conteudo .

    RBRACES         reduce using rule 4 (conteudo -> if conteudo .)


state 24

    (5) conteudo -> else conteudo .

    RBRACES         reduce using rule 5 (conteudo -> else conteudo .)


state 25

    (11) declaracoes -> tipo ID . SEMICOLON
    (12) declaracoes -> tipo ID . SEMICOLON declaracoes
    (13) declaracoes -> tipo ID . ids SEMICOLON declaracoes
    (14) declaracoes -> tipo ID . EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> tipo ID . EQUALS FLOATN SEMICOLON declaracoes
    (8) ids -> . COMMA ID
    (9) ids -> . COMMA ID ids

    SEMICOLON       shift and go to state 29
    EQUALS          shift and go to state 31
    COMMA           shift and go to state 32

    ids                            shift and go to state 30

state 26

    (17) atribuicoes -> ID EQUALS . INTEGER SEMICOLON
    (18) atribuicoes -> ID EQUALS . FLOATN SEMICOLON

    INTEGER         shift and go to state 33
    FLOATN          shift and go to state 34


state 27

    (29) if -> IF LPAREN . condicao RPAREN bloco
    (19) condicao -> . ID LT INTEGER
    (20) condicao -> . ID LE INTEGER
    (21) condicao -> . ID LT FLOATN
    (22) condicao -> . ID GT INTEGER
    (23) condicao -> . ID GE FLOATN
    (24) condicao -> . ID GE INTEGER
    (25) condicao -> . ID GT FLOATN
    (26) condicao -> . ID LE FLOATN

    ID              shift and go to state 36

    condicao                       shift and go to state 35

state 28

    (30) else -> ELSE LBRACES . bloco RBRACES
    (27) bloco -> . LBRACES atribuicoes RBRACES
    (28) bloco -> . LBRACES operacao RBRACES

    LBRACES         shift and go to state 37

    bloco                          shift and go to state 38

state 29

    (11) declaracoes -> tipo ID SEMICOLON .
    (12) declaracoes -> tipo ID SEMICOLON . declaracoes
    (11) declaracoes -> . tipo ID SEMICOLON
    (12) declaracoes -> . tipo ID SEMICOLON declaracoes
    (13) declaracoes -> . tipo ID ids SEMICOLON declaracoes
    (14) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON declaracoes
    (16) declaracoes -> . empty
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (10) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for IF resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for ELSE resolved using rule 10 (empty -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! reduce/reduce conflict for RBRACES resolved using rule 10 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    ID              reduce using rule 10 (empty -> .)
    IF              reduce using rule 10 (empty -> .)
    ELSE            reduce using rule 10 (empty -> .)
    RBRACES         reduce using rule 10 (empty -> .)

  ! ID              [ reduce using rule 11 (declaracoes -> tipo ID SEMICOLON .) ]
  ! IF              [ reduce using rule 11 (declaracoes -> tipo ID SEMICOLON .) ]
  ! ELSE            [ reduce using rule 11 (declaracoes -> tipo ID SEMICOLON .) ]
  ! INT             [ reduce using rule 11 (declaracoes -> tipo ID SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 11 (declaracoes -> tipo ID SEMICOLON .) ]
  ! RBRACES         [ reduce using rule 11 (declaracoes -> tipo ID SEMICOLON .) ]
  ! INT             [ reduce using rule 10 (empty -> .) ]
  ! FLOAT           [ reduce using rule 10 (empty -> .) ]

    tipo                           shift and go to state 14
    declaracoes                    shift and go to state 39
    empty                          shift and go to state 40

state 30

    (13) declaracoes -> tipo ID ids . SEMICOLON declaracoes

    SEMICOLON       shift and go to state 41


state 31

    (14) declaracoes -> tipo ID EQUALS . INTEGER SEMICOLON declaracoes
    (15) declaracoes -> tipo ID EQUALS . FLOATN SEMICOLON declaracoes

    INTEGER         shift and go to state 42
    FLOATN          shift and go to state 43


state 32

    (8) ids -> COMMA . ID
    (9) ids -> COMMA . ID ids

    ID              shift and go to state 44


state 33

    (17) atribuicoes -> ID EQUALS INTEGER . SEMICOLON

    SEMICOLON       shift and go to state 45


state 34

    (18) atribuicoes -> ID EQUALS FLOATN . SEMICOLON

    SEMICOLON       shift and go to state 46


state 35

    (29) if -> IF LPAREN condicao . RPAREN bloco

    RPAREN          shift and go to state 47


state 36

    (19) condicao -> ID . LT INTEGER
    (20) condicao -> ID . LE INTEGER
    (21) condicao -> ID . LT FLOATN
    (22) condicao -> ID . GT INTEGER
    (23) condicao -> ID . GE FLOATN
    (24) condicao -> ID . GE INTEGER
    (25) condicao -> ID . GT FLOATN
    (26) condicao -> ID . LE FLOATN

    LT              shift and go to state 48
    LE              shift and go to state 49
    GT              shift and go to state 50
    GE              shift and go to state 51


state 37

    (27) bloco -> LBRACES . atribuicoes RBRACES
    (28) bloco -> LBRACES . operacao RBRACES
    (17) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (18) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (36) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (43) operacao -> . empty
    (10) empty -> .

    ID              shift and go to state 54
    RBRACES         reduce using rule 10 (empty -> .)

    atribuicoes                    shift and go to state 52
    operacao                       shift and go to state 53
    empty                          shift and go to state 55

state 38

    (30) else -> ELSE LBRACES bloco . RBRACES

    RBRACES         shift and go to state 56


state 39

    (12) declaracoes -> tipo ID SEMICOLON declaracoes .

    ID              reduce using rule 12 (declaracoes -> tipo ID SEMICOLON declaracoes .)
    IF              reduce using rule 12 (declaracoes -> tipo ID SEMICOLON declaracoes .)
    ELSE            reduce using rule 12 (declaracoes -> tipo ID SEMICOLON declaracoes .)
    INT             reduce using rule 12 (declaracoes -> tipo ID SEMICOLON declaracoes .)
    FLOAT           reduce using rule 12 (declaracoes -> tipo ID SEMICOLON declaracoes .)
    RBRACES         reduce using rule 12 (declaracoes -> tipo ID SEMICOLON declaracoes .)


state 40

    (16) declaracoes -> empty .

    ID              reduce using rule 16 (declaracoes -> empty .)
    IF              reduce using rule 16 (declaracoes -> empty .)
    ELSE            reduce using rule 16 (declaracoes -> empty .)
    INT             reduce using rule 16 (declaracoes -> empty .)
    FLOAT           reduce using rule 16 (declaracoes -> empty .)
    RBRACES         reduce using rule 16 (declaracoes -> empty .)


state 41

    (13) declaracoes -> tipo ID ids SEMICOLON . declaracoes
    (11) declaracoes -> . tipo ID SEMICOLON
    (12) declaracoes -> . tipo ID SEMICOLON declaracoes
    (13) declaracoes -> . tipo ID ids SEMICOLON declaracoes
    (14) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON declaracoes
    (16) declaracoes -> . empty
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (10) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    ID              reduce using rule 10 (empty -> .)
    IF              reduce using rule 10 (empty -> .)
    ELSE            reduce using rule 10 (empty -> .)
    RBRACES         reduce using rule 10 (empty -> .)

  ! INT             [ reduce using rule 10 (empty -> .) ]
  ! FLOAT           [ reduce using rule 10 (empty -> .) ]

    tipo                           shift and go to state 14
    declaracoes                    shift and go to state 57
    empty                          shift and go to state 40

state 42

    (14) declaracoes -> tipo ID EQUALS INTEGER . SEMICOLON declaracoes

    SEMICOLON       shift and go to state 58


state 43

    (15) declaracoes -> tipo ID EQUALS FLOATN . SEMICOLON declaracoes

    SEMICOLON       shift and go to state 59


state 44

    (8) ids -> COMMA ID .
    (9) ids -> COMMA ID . ids
    (8) ids -> . COMMA ID
    (9) ids -> . COMMA ID ids

    SEMICOLON       reduce using rule 8 (ids -> COMMA ID .)
    COMMA           shift and go to state 32

    ids                            shift and go to state 60

state 45

    (17) atribuicoes -> ID EQUALS INTEGER SEMICOLON .

    ID              reduce using rule 17 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    IF              reduce using rule 17 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    ELSE            reduce using rule 17 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    INT             reduce using rule 17 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    FLOAT           reduce using rule 17 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    RBRACES         reduce using rule 17 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)


state 46

    (18) atribuicoes -> ID EQUALS FLOATN SEMICOLON .

    ID              reduce using rule 18 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    IF              reduce using rule 18 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    ELSE            reduce using rule 18 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    INT             reduce using rule 18 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    FLOAT           reduce using rule 18 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    RBRACES         reduce using rule 18 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)


state 47

    (29) if -> IF LPAREN condicao RPAREN . bloco
    (27) bloco -> . LBRACES atribuicoes RBRACES
    (28) bloco -> . LBRACES operacao RBRACES

    LBRACES         shift and go to state 37

    bloco                          shift and go to state 61

state 48

    (19) condicao -> ID LT . INTEGER
    (21) condicao -> ID LT . FLOATN

    INTEGER         shift and go to state 62
    FLOATN          shift and go to state 63


state 49

    (20) condicao -> ID LE . INTEGER
    (26) condicao -> ID LE . FLOATN

    INTEGER         shift and go to state 64
    FLOATN          shift and go to state 65


state 50

    (22) condicao -> ID GT . INTEGER
    (25) condicao -> ID GT . FLOATN

    INTEGER         shift and go to state 66
    FLOATN          shift and go to state 67


state 51

    (23) condicao -> ID GE . FLOATN
    (24) condicao -> ID GE . INTEGER

    FLOATN          shift and go to state 68
    INTEGER         shift and go to state 69


state 52

    (27) bloco -> LBRACES atribuicoes . RBRACES

    RBRACES         shift and go to state 70


state 53

    (28) bloco -> LBRACES operacao . RBRACES

    RBRACES         shift and go to state 71


state 54

    (17) atribuicoes -> ID . EQUALS INTEGER SEMICOLON
    (18) atribuicoes -> ID . EQUALS FLOATN SEMICOLON
    (36) operacao -> ID . EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> ID . EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> ID . EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> ID . EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> ID . EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> ID . EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> ID . EQUALS FLOATN operador ID SEMICOLON operacao

    EQUALS          shift and go to state 72


state 55

    (43) operacao -> empty .

    RBRACES         reduce using rule 43 (operacao -> empty .)


state 56

    (30) else -> ELSE LBRACES bloco RBRACES .

    ID              reduce using rule 30 (else -> ELSE LBRACES bloco RBRACES .)
    IF              reduce using rule 30 (else -> ELSE LBRACES bloco RBRACES .)
    ELSE            reduce using rule 30 (else -> ELSE LBRACES bloco RBRACES .)
    INT             reduce using rule 30 (else -> ELSE LBRACES bloco RBRACES .)
    FLOAT           reduce using rule 30 (else -> ELSE LBRACES bloco RBRACES .)
    RBRACES         reduce using rule 30 (else -> ELSE LBRACES bloco RBRACES .)


state 57

    (13) declaracoes -> tipo ID ids SEMICOLON declaracoes .

    ID              reduce using rule 13 (declaracoes -> tipo ID ids SEMICOLON declaracoes .)
    IF              reduce using rule 13 (declaracoes -> tipo ID ids SEMICOLON declaracoes .)
    ELSE            reduce using rule 13 (declaracoes -> tipo ID ids SEMICOLON declaracoes .)
    INT             reduce using rule 13 (declaracoes -> tipo ID ids SEMICOLON declaracoes .)
    FLOAT           reduce using rule 13 (declaracoes -> tipo ID ids SEMICOLON declaracoes .)
    RBRACES         reduce using rule 13 (declaracoes -> tipo ID ids SEMICOLON declaracoes .)


state 58

    (14) declaracoes -> tipo ID EQUALS INTEGER SEMICOLON . declaracoes
    (11) declaracoes -> . tipo ID SEMICOLON
    (12) declaracoes -> . tipo ID SEMICOLON declaracoes
    (13) declaracoes -> . tipo ID ids SEMICOLON declaracoes
    (14) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON declaracoes
    (16) declaracoes -> . empty
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (10) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    ID              reduce using rule 10 (empty -> .)
    IF              reduce using rule 10 (empty -> .)
    ELSE            reduce using rule 10 (empty -> .)
    RBRACES         reduce using rule 10 (empty -> .)

  ! INT             [ reduce using rule 10 (empty -> .) ]
  ! FLOAT           [ reduce using rule 10 (empty -> .) ]

    tipo                           shift and go to state 14
    declaracoes                    shift and go to state 73
    empty                          shift and go to state 40

state 59

    (15) declaracoes -> tipo ID EQUALS FLOATN SEMICOLON . declaracoes
    (11) declaracoes -> . tipo ID SEMICOLON
    (12) declaracoes -> . tipo ID SEMICOLON declaracoes
    (13) declaracoes -> . tipo ID ids SEMICOLON declaracoes
    (14) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON declaracoes
    (15) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON declaracoes
    (16) declaracoes -> . empty
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (10) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    ID              reduce using rule 10 (empty -> .)
    IF              reduce using rule 10 (empty -> .)
    ELSE            reduce using rule 10 (empty -> .)
    RBRACES         reduce using rule 10 (empty -> .)

  ! INT             [ reduce using rule 10 (empty -> .) ]
  ! FLOAT           [ reduce using rule 10 (empty -> .) ]

    tipo                           shift and go to state 14
    declaracoes                    shift and go to state 74
    empty                          shift and go to state 40

state 60

    (9) ids -> COMMA ID ids .

    SEMICOLON       reduce using rule 9 (ids -> COMMA ID ids .)


state 61

    (29) if -> IF LPAREN condicao RPAREN bloco .

    ID              reduce using rule 29 (if -> IF LPAREN condicao RPAREN bloco .)
    IF              reduce using rule 29 (if -> IF LPAREN condicao RPAREN bloco .)
    ELSE            reduce using rule 29 (if -> IF LPAREN condicao RPAREN bloco .)
    INT             reduce using rule 29 (if -> IF LPAREN condicao RPAREN bloco .)
    FLOAT           reduce using rule 29 (if -> IF LPAREN condicao RPAREN bloco .)
    RBRACES         reduce using rule 29 (if -> IF LPAREN condicao RPAREN bloco .)


state 62

    (19) condicao -> ID LT INTEGER .

    RPAREN          reduce using rule 19 (condicao -> ID LT INTEGER .)


state 63

    (21) condicao -> ID LT FLOATN .

    RPAREN          reduce using rule 21 (condicao -> ID LT FLOATN .)


state 64

    (20) condicao -> ID LE INTEGER .

    RPAREN          reduce using rule 20 (condicao -> ID LE INTEGER .)


state 65

    (26) condicao -> ID LE FLOATN .

    RPAREN          reduce using rule 26 (condicao -> ID LE FLOATN .)


state 66

    (22) condicao -> ID GT INTEGER .

    RPAREN          reduce using rule 22 (condicao -> ID GT INTEGER .)


state 67

    (25) condicao -> ID GT FLOATN .

    RPAREN          reduce using rule 25 (condicao -> ID GT FLOATN .)


state 68

    (23) condicao -> ID GE FLOATN .

    RPAREN          reduce using rule 23 (condicao -> ID GE FLOATN .)


state 69

    (24) condicao -> ID GE INTEGER .

    RPAREN          reduce using rule 24 (condicao -> ID GE INTEGER .)


state 70

    (27) bloco -> LBRACES atribuicoes RBRACES .

    RBRACES         reduce using rule 27 (bloco -> LBRACES atribuicoes RBRACES .)
    ID              reduce using rule 27 (bloco -> LBRACES atribuicoes RBRACES .)
    IF              reduce using rule 27 (bloco -> LBRACES atribuicoes RBRACES .)
    ELSE            reduce using rule 27 (bloco -> LBRACES atribuicoes RBRACES .)
    INT             reduce using rule 27 (bloco -> LBRACES atribuicoes RBRACES .)
    FLOAT           reduce using rule 27 (bloco -> LBRACES atribuicoes RBRACES .)


state 71

    (28) bloco -> LBRACES operacao RBRACES .

    RBRACES         reduce using rule 28 (bloco -> LBRACES operacao RBRACES .)
    ID              reduce using rule 28 (bloco -> LBRACES operacao RBRACES .)
    IF              reduce using rule 28 (bloco -> LBRACES operacao RBRACES .)
    ELSE            reduce using rule 28 (bloco -> LBRACES operacao RBRACES .)
    INT             reduce using rule 28 (bloco -> LBRACES operacao RBRACES .)
    FLOAT           reduce using rule 28 (bloco -> LBRACES operacao RBRACES .)


state 72

    (17) atribuicoes -> ID EQUALS . INTEGER SEMICOLON
    (18) atribuicoes -> ID EQUALS . FLOATN SEMICOLON
    (36) operacao -> ID EQUALS . ID operador ID SEMICOLON operacao
    (37) operacao -> ID EQUALS . ID operador INTEGER SEMICOLON operacao
    (38) operacao -> ID EQUALS . ID operador FLOATN SEMICOLON operacao
    (39) operacao -> ID EQUALS . INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> ID EQUALS . FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> ID EQUALS . INTEGER operador ID SEMICOLON operacao
    (42) operacao -> ID EQUALS . FLOATN operador ID SEMICOLON operacao

    INTEGER         shift and go to state 76
    FLOATN          shift and go to state 77
    ID              shift and go to state 75


state 73

    (14) declaracoes -> tipo ID EQUALS INTEGER SEMICOLON declaracoes .

    ID              reduce using rule 14 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON declaracoes .)
    IF              reduce using rule 14 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON declaracoes .)
    ELSE            reduce using rule 14 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON declaracoes .)
    INT             reduce using rule 14 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON declaracoes .)
    FLOAT           reduce using rule 14 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON declaracoes .)
    RBRACES         reduce using rule 14 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON declaracoes .)


state 74

    (15) declaracoes -> tipo ID EQUALS FLOATN SEMICOLON declaracoes .

    ID              reduce using rule 15 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON declaracoes .)
    IF              reduce using rule 15 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON declaracoes .)
    ELSE            reduce using rule 15 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON declaracoes .)
    INT             reduce using rule 15 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON declaracoes .)
    FLOAT           reduce using rule 15 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON declaracoes .)
    RBRACES         reduce using rule 15 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON declaracoes .)


state 75

    (36) operacao -> ID EQUALS ID . operador ID SEMICOLON operacao
    (37) operacao -> ID EQUALS ID . operador INTEGER SEMICOLON operacao
    (38) operacao -> ID EQUALS ID . operador FLOATN SEMICOLON operacao
    (31) operador -> . PLUS
    (32) operador -> . MINUS
    (33) operador -> . TIMES
    (34) operador -> . POWER
    (35) operador -> . DIVIDE

    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 81
    POWER           shift and go to state 82
    DIVIDE          shift and go to state 83

    operador                       shift and go to state 78

state 76

    (17) atribuicoes -> ID EQUALS INTEGER . SEMICOLON
    (39) operacao -> ID EQUALS INTEGER . operador INTEGER SEMICOLON operacao
    (41) operacao -> ID EQUALS INTEGER . operador ID SEMICOLON operacao
    (31) operador -> . PLUS
    (32) operador -> . MINUS
    (33) operador -> . TIMES
    (34) operador -> . POWER
    (35) operador -> . DIVIDE

    SEMICOLON       shift and go to state 45
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 81
    POWER           shift and go to state 82
    DIVIDE          shift and go to state 83

    operador                       shift and go to state 84

state 77

    (18) atribuicoes -> ID EQUALS FLOATN . SEMICOLON
    (40) operacao -> ID EQUALS FLOATN . operador INTEGER SEMICOLON operacao
    (42) operacao -> ID EQUALS FLOATN . operador ID SEMICOLON operacao
    (31) operador -> . PLUS
    (32) operador -> . MINUS
    (33) operador -> . TIMES
    (34) operador -> . POWER
    (35) operador -> . DIVIDE

    SEMICOLON       shift and go to state 46
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 81
    POWER           shift and go to state 82
    DIVIDE          shift and go to state 83

    operador                       shift and go to state 85

state 78

    (36) operacao -> ID EQUALS ID operador . ID SEMICOLON operacao
    (37) operacao -> ID EQUALS ID operador . INTEGER SEMICOLON operacao
    (38) operacao -> ID EQUALS ID operador . FLOATN SEMICOLON operacao

    ID              shift and go to state 86
    INTEGER         shift and go to state 87
    FLOATN          shift and go to state 88


state 79

    (31) operador -> PLUS .

    ID              reduce using rule 31 (operador -> PLUS .)
    INTEGER         reduce using rule 31 (operador -> PLUS .)
    FLOATN          reduce using rule 31 (operador -> PLUS .)


state 80

    (32) operador -> MINUS .

    ID              reduce using rule 32 (operador -> MINUS .)
    INTEGER         reduce using rule 32 (operador -> MINUS .)
    FLOATN          reduce using rule 32 (operador -> MINUS .)


state 81

    (33) operador -> TIMES .

    ID              reduce using rule 33 (operador -> TIMES .)
    INTEGER         reduce using rule 33 (operador -> TIMES .)
    FLOATN          reduce using rule 33 (operador -> TIMES .)


state 82

    (34) operador -> POWER .

    ID              reduce using rule 34 (operador -> POWER .)
    INTEGER         reduce using rule 34 (operador -> POWER .)
    FLOATN          reduce using rule 34 (operador -> POWER .)


state 83

    (35) operador -> DIVIDE .

    ID              reduce using rule 35 (operador -> DIVIDE .)
    INTEGER         reduce using rule 35 (operador -> DIVIDE .)
    FLOATN          reduce using rule 35 (operador -> DIVIDE .)


state 84

    (39) operacao -> ID EQUALS INTEGER operador . INTEGER SEMICOLON operacao
    (41) operacao -> ID EQUALS INTEGER operador . ID SEMICOLON operacao

    INTEGER         shift and go to state 90
    ID              shift and go to state 89


state 85

    (40) operacao -> ID EQUALS FLOATN operador . INTEGER SEMICOLON operacao
    (42) operacao -> ID EQUALS FLOATN operador . ID SEMICOLON operacao

    INTEGER         shift and go to state 92
    ID              shift and go to state 91


state 86

    (36) operacao -> ID EQUALS ID operador ID . SEMICOLON operacao

    SEMICOLON       shift and go to state 93


state 87

    (37) operacao -> ID EQUALS ID operador INTEGER . SEMICOLON operacao

    SEMICOLON       shift and go to state 94


state 88

    (38) operacao -> ID EQUALS ID operador FLOATN . SEMICOLON operacao

    SEMICOLON       shift and go to state 95


state 89

    (41) operacao -> ID EQUALS INTEGER operador ID . SEMICOLON operacao

    SEMICOLON       shift and go to state 96


state 90

    (39) operacao -> ID EQUALS INTEGER operador INTEGER . SEMICOLON operacao

    SEMICOLON       shift and go to state 97


state 91

    (42) operacao -> ID EQUALS FLOATN operador ID . SEMICOLON operacao

    SEMICOLON       shift and go to state 98


state 92

    (40) operacao -> ID EQUALS FLOATN operador INTEGER . SEMICOLON operacao

    SEMICOLON       shift and go to state 99


state 93

    (36) operacao -> ID EQUALS ID operador ID SEMICOLON . operacao
    (36) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (43) operacao -> . empty
    (10) empty -> .

    ID              shift and go to state 100
    RBRACES         reduce using rule 10 (empty -> .)

    operacao                       shift and go to state 101
    empty                          shift and go to state 55

state 94

    (37) operacao -> ID EQUALS ID operador INTEGER SEMICOLON . operacao
    (36) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (43) operacao -> . empty
    (10) empty -> .

    ID              shift and go to state 100
    RBRACES         reduce using rule 10 (empty -> .)

    operacao                       shift and go to state 102
    empty                          shift and go to state 55

state 95

    (38) operacao -> ID EQUALS ID operador FLOATN SEMICOLON . operacao
    (36) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (43) operacao -> . empty
    (10) empty -> .

    ID              shift and go to state 100
    RBRACES         reduce using rule 10 (empty -> .)

    operacao                       shift and go to state 103
    empty                          shift and go to state 55

state 96

    (41) operacao -> ID EQUALS INTEGER operador ID SEMICOLON . operacao
    (36) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (43) operacao -> . empty
    (10) empty -> .

    ID              shift and go to state 100
    RBRACES         reduce using rule 10 (empty -> .)

    operacao                       shift and go to state 104
    empty                          shift and go to state 55

state 97

    (39) operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON . operacao
    (36) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (43) operacao -> . empty
    (10) empty -> .

    ID              shift and go to state 100
    RBRACES         reduce using rule 10 (empty -> .)

    operacao                       shift and go to state 105
    empty                          shift and go to state 55

state 98

    (42) operacao -> ID EQUALS FLOATN operador ID SEMICOLON . operacao
    (36) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (43) operacao -> . empty
    (10) empty -> .

    ID              shift and go to state 100
    RBRACES         reduce using rule 10 (empty -> .)

    operacao                       shift and go to state 106
    empty                          shift and go to state 55

state 99

    (40) operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON . operacao
    (36) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (43) operacao -> . empty
    (10) empty -> .

    ID              shift and go to state 100
    RBRACES         reduce using rule 10 (empty -> .)

    operacao                       shift and go to state 107
    empty                          shift and go to state 55

state 100

    (36) operacao -> ID . EQUALS ID operador ID SEMICOLON operacao
    (37) operacao -> ID . EQUALS ID operador INTEGER SEMICOLON operacao
    (38) operacao -> ID . EQUALS ID operador FLOATN SEMICOLON operacao
    (39) operacao -> ID . EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> ID . EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> ID . EQUALS INTEGER operador ID SEMICOLON operacao
    (42) operacao -> ID . EQUALS FLOATN operador ID SEMICOLON operacao

    EQUALS          shift and go to state 108


state 101

    (36) operacao -> ID EQUALS ID operador ID SEMICOLON operacao .

    RBRACES         reduce using rule 36 (operacao -> ID EQUALS ID operador ID SEMICOLON operacao .)


state 102

    (37) operacao -> ID EQUALS ID operador INTEGER SEMICOLON operacao .

    RBRACES         reduce using rule 37 (operacao -> ID EQUALS ID operador INTEGER SEMICOLON operacao .)


state 103

    (38) operacao -> ID EQUALS ID operador FLOATN SEMICOLON operacao .

    RBRACES         reduce using rule 38 (operacao -> ID EQUALS ID operador FLOATN SEMICOLON operacao .)


state 104

    (41) operacao -> ID EQUALS INTEGER operador ID SEMICOLON operacao .

    RBRACES         reduce using rule 41 (operacao -> ID EQUALS INTEGER operador ID SEMICOLON operacao .)


state 105

    (39) operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON operacao .

    RBRACES         reduce using rule 39 (operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON operacao .)


state 106

    (42) operacao -> ID EQUALS FLOATN operador ID SEMICOLON operacao .

    RBRACES         reduce using rule 42 (operacao -> ID EQUALS FLOATN operador ID SEMICOLON operacao .)


state 107

    (40) operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON operacao .

    RBRACES         reduce using rule 40 (operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON operacao .)


state 108

    (36) operacao -> ID EQUALS . ID operador ID SEMICOLON operacao
    (37) operacao -> ID EQUALS . ID operador INTEGER SEMICOLON operacao
    (38) operacao -> ID EQUALS . ID operador FLOATN SEMICOLON operacao
    (39) operacao -> ID EQUALS . INTEGER operador INTEGER SEMICOLON operacao
    (40) operacao -> ID EQUALS . FLOATN operador INTEGER SEMICOLON operacao
    (41) operacao -> ID EQUALS . INTEGER operador ID SEMICOLON operacao
    (42) operacao -> ID EQUALS . FLOATN operador ID SEMICOLON operacao

    ID              shift and go to state 75
    INTEGER         shift and go to state 109
    FLOATN          shift and go to state 110


state 109

    (39) operacao -> ID EQUALS INTEGER . operador INTEGER SEMICOLON operacao
    (41) operacao -> ID EQUALS INTEGER . operador ID SEMICOLON operacao
    (31) operador -> . PLUS
    (32) operador -> . MINUS
    (33) operador -> . TIMES
    (34) operador -> . POWER
    (35) operador -> . DIVIDE

    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 81
    POWER           shift and go to state 82
    DIVIDE          shift and go to state 83

    operador                       shift and go to state 84

state 110

    (40) operacao -> ID EQUALS FLOATN . operador INTEGER SEMICOLON operacao
    (42) operacao -> ID EQUALS FLOATN . operador ID SEMICOLON operacao
    (31) operador -> . PLUS
    (32) operador -> . MINUS
    (33) operador -> . TIMES
    (34) operador -> . POWER
    (35) operador -> . DIVIDE

    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 81
    POWER           shift and go to state 82
    DIVIDE          shift and go to state 83

    operador                       shift and go to state 85
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 7 resolved as shift
WARNING: shift/reduce conflict for IF in state 7 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 7 resolved as shift
WARNING: shift/reduce conflict for INT in state 7 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for IF in state 9 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 9 resolved as shift
WARNING: shift/reduce conflict for INT in state 9 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for IF in state 12 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 12 resolved as shift
WARNING: shift/reduce conflict for INT in state 12 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 12 resolved as shift
WARNING: shift/reduce conflict for INT in state 29 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 29 resolved as shift
WARNING: shift/reduce conflict for INT in state 29 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 29 resolved as shift
WARNING: shift/reduce conflict for INT in state 41 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 41 resolved as shift
WARNING: shift/reduce conflict for INT in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 59 resolved as shift
WARNING: reduce/reduce conflict in state 13 resolved using rule (conteudo -> empty)
WARNING: rejected rule (declaracoes -> empty) in state 13
WARNING: reduce/reduce conflict in state 29 resolved using rule (empty -> <empty>)
WARNING: rejected rule (declaracoes -> tipo ID SEMICOLON) in state 29
WARNING: Rule (declaracoes -> tipo ID SEMICOLON) is never reduced
