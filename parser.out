Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NE
    SEMI
    STRING

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> INT MAIN LPAREN RPAREN blocoprincipal
Rule 2     conteudo -> declaracoes
Rule 3     conteudo -> declaracoes conteudo
Rule 4     conteudo -> atribuicoes
Rule 5     conteudo -> atribuicoes conteudo
Rule 6     conteudo -> if
Rule 7     conteudo -> if conteudo
Rule 8     conteudo -> empty
Rule 9     blocoprincipal -> LBRACES conteudo RBRACES
Rule 10    ids -> COMMA ID
Rule 11    ids -> COMMA ID ids
Rule 12    empty -> <empty>
Rule 13    declaracoes -> tipo ID SEMICOLON
Rule 14    declaracoes -> tipo ID ids SEMICOLON
Rule 15    declaracoes -> tipo ID EQUALS INTEGER SEMICOLON
Rule 16    declaracoes -> tipo ID EQUALS FLOATN SEMICOLON
Rule 17    declaracoes -> empty
Rule 18    atribuicoes -> ID EQUALS INTEGER SEMICOLON
Rule 19    atribuicoes -> ID EQUALS FLOATN SEMICOLON
Rule 20    condicao -> ID LT INTEGER
Rule 21    condicao -> ID LE INTEGER
Rule 22    condicao -> ID LT FLOATN
Rule 23    condicao -> ID GT INTEGER
Rule 24    condicao -> ID GE FLOATN
Rule 25    condicao -> ID GE INTEGER
Rule 26    condicao -> ID GT FLOATN
Rule 27    condicao -> ID LE FLOATN
Rule 28    bloco -> LBRACES conteudo_if RBRACES
Rule 29    conteudo_if -> atribuicoes conteudo_if
Rule 30    conteudo_if -> operacao conteudo_if
Rule 31    conteudo_if -> if
Rule 32    conteudo_if -> empty
Rule 33    if -> IF LPAREN condicao RPAREN bloco
Rule 34    if -> IF LPAREN condicao RPAREN bloco else
Rule 35    else -> ELSE bloco
Rule 36    operador -> PLUS
Rule 37    operador -> MINUS
Rule 38    operador -> TIMES
Rule 39    operador -> POWER
Rule 40    operador -> DIVIDE
Rule 41    operacao -> ID EQUALS ID operador ID SEMICOLON operacao
Rule 42    operacao -> ID EQUALS ID operador INTEGER SEMICOLON operacao
Rule 43    operacao -> ID EQUALS ID operador FLOATN SEMICOLON operacao
Rule 44    operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
Rule 45    operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
Rule 46    operacao -> ID EQUALS INTEGER operador ID SEMICOLON operacao
Rule 47    operacao -> ID EQUALS FLOATN operador ID SEMICOLON operacao
Rule 48    operacao -> empty
Rule 49    tipo -> INT
Rule 50    tipo -> FLOAT
Rule 51    tipo -> CHAR

Terminals, with rules where they appear

CHAR                 : 51
COMMA                : 10 11
DIVIDE               : 40
ELSE                 : 35
EQUALS               : 15 16 18 19 41 42 43 44 45 46 47
FLOAT                : 50
FLOATN               : 16 19 22 24 26 27 43 45 47
GE                   : 24 25
GT                   : 23 26
ID                   : 10 11 13 14 15 16 18 19 20 21 22 23 24 25 26 27 41 41 41 42 42 43 43 44 45 46 46 47 47
IF                   : 33 34
INT                  : 1 49
INTEGER              : 15 18 20 21 23 25 42 44 44 45 46
LBRACES              : 9 28
LE                   : 21 27
LPAREN               : 1 33 34
LT                   : 20 22
MAIN                 : 1
MINUS                : 37
NE                   : 
PLUS                 : 36
POWER                : 39
RBRACES              : 9 28
RPAREN               : 1 33 34
SEMI                 : 
SEMICOLON            : 13 14 15 16 18 19 41 42 43 44 45 46 47
STRING               : 
TIMES                : 38
error                : 

Nonterminals, with rules where they appear

atribuicoes          : 4 5 29
bloco                : 33 34 35
blocoprincipal       : 1
condicao             : 33 34
conteudo             : 3 5 7 9
conteudo_if          : 28 29 30
declaracoes          : 2 3
else                 : 34
empty                : 8 17 32 48
ids                  : 11 14
if                   : 6 7 31
inicio               : 0
operacao             : 30 41 42 43 44 45 46 47
operador             : 41 42 43 44 45 46 47
tipo                 : 13 14 15 16

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . INT MAIN LPAREN RPAREN blocoprincipal

    INT             shift and go to state 2

    inicio                         shift and go to state 1

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> INT . MAIN LPAREN RPAREN blocoprincipal

    MAIN            shift and go to state 3


state 3

    (1) inicio -> INT MAIN . LPAREN RPAREN blocoprincipal

    LPAREN          shift and go to state 4


state 4

    (1) inicio -> INT MAIN LPAREN . RPAREN blocoprincipal

    RPAREN          shift and go to state 5


state 5

    (1) inicio -> INT MAIN LPAREN RPAREN . blocoprincipal
    (9) blocoprincipal -> . LBRACES conteudo RBRACES

    LBRACES         shift and go to state 7

    blocoprincipal                 shift and go to state 6

state 6

    (1) inicio -> INT MAIN LPAREN RPAREN blocoprincipal .

    $end            reduce using rule 1 (inicio -> INT MAIN LPAREN RPAREN blocoprincipal .)


state 7

    (9) blocoprincipal -> LBRACES . conteudo RBRACES
    (2) conteudo -> . declaracoes
    (3) conteudo -> . declaracoes conteudo
    (4) conteudo -> . atribuicoes
    (5) conteudo -> . atribuicoes conteudo
    (6) conteudo -> . if
    (7) conteudo -> . if conteudo
    (8) conteudo -> . empty
    (13) declaracoes -> . tipo ID SEMICOLON
    (14) declaracoes -> . tipo ID ids SEMICOLON
    (15) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON
    (16) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON
    (17) declaracoes -> . empty
    (18) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (19) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (33) if -> . IF LPAREN condicao RPAREN bloco
    (34) if -> . IF LPAREN condicao RPAREN bloco else
    (12) empty -> .
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    ID              shift and go to state 14
    IF              shift and go to state 15
    RBRACES         reduce using rule 12 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

  ! ID              [ reduce using rule 12 (empty -> .) ]
  ! IF              [ reduce using rule 12 (empty -> .) ]
  ! INT             [ reduce using rule 12 (empty -> .) ]
  ! FLOAT           [ reduce using rule 12 (empty -> .) ]
  ! CHAR            [ reduce using rule 12 (empty -> .) ]

    conteudo                       shift and go to state 8
    declaracoes                    shift and go to state 9
    atribuicoes                    shift and go to state 10
    if                             shift and go to state 11
    empty                          shift and go to state 12
    tipo                           shift and go to state 13

state 8

    (9) blocoprincipal -> LBRACES conteudo . RBRACES

    RBRACES         shift and go to state 19


state 9

    (2) conteudo -> declaracoes .
    (3) conteudo -> declaracoes . conteudo
    (2) conteudo -> . declaracoes
    (3) conteudo -> . declaracoes conteudo
    (4) conteudo -> . atribuicoes
    (5) conteudo -> . atribuicoes conteudo
    (6) conteudo -> . if
    (7) conteudo -> . if conteudo
    (8) conteudo -> . empty
    (13) declaracoes -> . tipo ID SEMICOLON
    (14) declaracoes -> . tipo ID ids SEMICOLON
    (15) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON
    (16) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON
    (17) declaracoes -> . empty
    (18) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (19) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (33) if -> . IF LPAREN condicao RPAREN bloco
    (34) if -> . IF LPAREN condicao RPAREN bloco else
    (12) empty -> .
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

  ! reduce/reduce conflict for RBRACES resolved using rule 2 (conteudo -> declaracoes .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    RBRACES         reduce using rule 2 (conteudo -> declaracoes .)
    ID              shift and go to state 14
    IF              shift and go to state 15
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

  ! RBRACES         [ reduce using rule 12 (empty -> .) ]
  ! ID              [ reduce using rule 12 (empty -> .) ]
  ! IF              [ reduce using rule 12 (empty -> .) ]
  ! INT             [ reduce using rule 12 (empty -> .) ]
  ! FLOAT           [ reduce using rule 12 (empty -> .) ]
  ! CHAR            [ reduce using rule 12 (empty -> .) ]

    declaracoes                    shift and go to state 9
    conteudo                       shift and go to state 20
    atribuicoes                    shift and go to state 10
    if                             shift and go to state 11
    empty                          shift and go to state 12
    tipo                           shift and go to state 13

state 10

    (4) conteudo -> atribuicoes .
    (5) conteudo -> atribuicoes . conteudo
    (2) conteudo -> . declaracoes
    (3) conteudo -> . declaracoes conteudo
    (4) conteudo -> . atribuicoes
    (5) conteudo -> . atribuicoes conteudo
    (6) conteudo -> . if
    (7) conteudo -> . if conteudo
    (8) conteudo -> . empty
    (13) declaracoes -> . tipo ID SEMICOLON
    (14) declaracoes -> . tipo ID ids SEMICOLON
    (15) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON
    (16) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON
    (17) declaracoes -> . empty
    (18) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (19) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (33) if -> . IF LPAREN condicao RPAREN bloco
    (34) if -> . IF LPAREN condicao RPAREN bloco else
    (12) empty -> .
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

  ! reduce/reduce conflict for RBRACES resolved using rule 4 (conteudo -> atribuicoes .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    RBRACES         reduce using rule 4 (conteudo -> atribuicoes .)
    ID              shift and go to state 14
    IF              shift and go to state 15
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

  ! RBRACES         [ reduce using rule 12 (empty -> .) ]
  ! ID              [ reduce using rule 12 (empty -> .) ]
  ! IF              [ reduce using rule 12 (empty -> .) ]
  ! INT             [ reduce using rule 12 (empty -> .) ]
  ! FLOAT           [ reduce using rule 12 (empty -> .) ]
  ! CHAR            [ reduce using rule 12 (empty -> .) ]

    atribuicoes                    shift and go to state 10
    conteudo                       shift and go to state 21
    declaracoes                    shift and go to state 9
    if                             shift and go to state 11
    empty                          shift and go to state 12
    tipo                           shift and go to state 13

state 11

    (6) conteudo -> if .
    (7) conteudo -> if . conteudo
    (2) conteudo -> . declaracoes
    (3) conteudo -> . declaracoes conteudo
    (4) conteudo -> . atribuicoes
    (5) conteudo -> . atribuicoes conteudo
    (6) conteudo -> . if
    (7) conteudo -> . if conteudo
    (8) conteudo -> . empty
    (13) declaracoes -> . tipo ID SEMICOLON
    (14) declaracoes -> . tipo ID ids SEMICOLON
    (15) declaracoes -> . tipo ID EQUALS INTEGER SEMICOLON
    (16) declaracoes -> . tipo ID EQUALS FLOATN SEMICOLON
    (17) declaracoes -> . empty
    (18) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (19) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (33) if -> . IF LPAREN condicao RPAREN bloco
    (34) if -> . IF LPAREN condicao RPAREN bloco else
    (12) empty -> .
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

  ! reduce/reduce conflict for RBRACES resolved using rule 6 (conteudo -> if .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    RBRACES         reduce using rule 6 (conteudo -> if .)
    ID              shift and go to state 14
    IF              shift and go to state 15
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

  ! RBRACES         [ reduce using rule 12 (empty -> .) ]
  ! ID              [ reduce using rule 12 (empty -> .) ]
  ! IF              [ reduce using rule 12 (empty -> .) ]
  ! INT             [ reduce using rule 12 (empty -> .) ]
  ! FLOAT           [ reduce using rule 12 (empty -> .) ]
  ! CHAR            [ reduce using rule 12 (empty -> .) ]

    if                             shift and go to state 11
    conteudo                       shift and go to state 22
    declaracoes                    shift and go to state 9
    atribuicoes                    shift and go to state 10
    empty                          shift and go to state 12
    tipo                           shift and go to state 13

state 12

    (8) conteudo -> empty .
    (17) declaracoes -> empty .

  ! reduce/reduce conflict for RBRACES resolved using rule 8 (conteudo -> empty .)
    RBRACES         reduce using rule 8 (conteudo -> empty .)
    ID              reduce using rule 17 (declaracoes -> empty .)
    IF              reduce using rule 17 (declaracoes -> empty .)
    INT             reduce using rule 17 (declaracoes -> empty .)
    FLOAT           reduce using rule 17 (declaracoes -> empty .)
    CHAR            reduce using rule 17 (declaracoes -> empty .)

  ! RBRACES         [ reduce using rule 17 (declaracoes -> empty .) ]


state 13

    (13) declaracoes -> tipo . ID SEMICOLON
    (14) declaracoes -> tipo . ID ids SEMICOLON
    (15) declaracoes -> tipo . ID EQUALS INTEGER SEMICOLON
    (16) declaracoes -> tipo . ID EQUALS FLOATN SEMICOLON

    ID              shift and go to state 23


state 14

    (18) atribuicoes -> ID . EQUALS INTEGER SEMICOLON
    (19) atribuicoes -> ID . EQUALS FLOATN SEMICOLON

    EQUALS          shift and go to state 24


state 15

    (33) if -> IF . LPAREN condicao RPAREN bloco
    (34) if -> IF . LPAREN condicao RPAREN bloco else

    LPAREN          shift and go to state 25


state 16

    (49) tipo -> INT .

    ID              reduce using rule 49 (tipo -> INT .)


state 17

    (50) tipo -> FLOAT .

    ID              reduce using rule 50 (tipo -> FLOAT .)


state 18

    (51) tipo -> CHAR .

    ID              reduce using rule 51 (tipo -> CHAR .)


state 19

    (9) blocoprincipal -> LBRACES conteudo RBRACES .

    $end            reduce using rule 9 (blocoprincipal -> LBRACES conteudo RBRACES .)


state 20

    (3) conteudo -> declaracoes conteudo .

    RBRACES         reduce using rule 3 (conteudo -> declaracoes conteudo .)


state 21

    (5) conteudo -> atribuicoes conteudo .

    RBRACES         reduce using rule 5 (conteudo -> atribuicoes conteudo .)


state 22

    (7) conteudo -> if conteudo .

    RBRACES         reduce using rule 7 (conteudo -> if conteudo .)


state 23

    (13) declaracoes -> tipo ID . SEMICOLON
    (14) declaracoes -> tipo ID . ids SEMICOLON
    (15) declaracoes -> tipo ID . EQUALS INTEGER SEMICOLON
    (16) declaracoes -> tipo ID . EQUALS FLOATN SEMICOLON
    (10) ids -> . COMMA ID
    (11) ids -> . COMMA ID ids

    SEMICOLON       shift and go to state 26
    EQUALS          shift and go to state 28
    COMMA           shift and go to state 29

    ids                            shift and go to state 27

state 24

    (18) atribuicoes -> ID EQUALS . INTEGER SEMICOLON
    (19) atribuicoes -> ID EQUALS . FLOATN SEMICOLON

    INTEGER         shift and go to state 30
    FLOATN          shift and go to state 31


state 25

    (33) if -> IF LPAREN . condicao RPAREN bloco
    (34) if -> IF LPAREN . condicao RPAREN bloco else
    (20) condicao -> . ID LT INTEGER
    (21) condicao -> . ID LE INTEGER
    (22) condicao -> . ID LT FLOATN
    (23) condicao -> . ID GT INTEGER
    (24) condicao -> . ID GE FLOATN
    (25) condicao -> . ID GE INTEGER
    (26) condicao -> . ID GT FLOATN
    (27) condicao -> . ID LE FLOATN

    ID              shift and go to state 33

    condicao                       shift and go to state 32

state 26

    (13) declaracoes -> tipo ID SEMICOLON .

    ID              reduce using rule 13 (declaracoes -> tipo ID SEMICOLON .)
    IF              reduce using rule 13 (declaracoes -> tipo ID SEMICOLON .)
    INT             reduce using rule 13 (declaracoes -> tipo ID SEMICOLON .)
    FLOAT           reduce using rule 13 (declaracoes -> tipo ID SEMICOLON .)
    CHAR            reduce using rule 13 (declaracoes -> tipo ID SEMICOLON .)
    RBRACES         reduce using rule 13 (declaracoes -> tipo ID SEMICOLON .)


state 27

    (14) declaracoes -> tipo ID ids . SEMICOLON

    SEMICOLON       shift and go to state 34


state 28

    (15) declaracoes -> tipo ID EQUALS . INTEGER SEMICOLON
    (16) declaracoes -> tipo ID EQUALS . FLOATN SEMICOLON

    INTEGER         shift and go to state 35
    FLOATN          shift and go to state 36


state 29

    (10) ids -> COMMA . ID
    (11) ids -> COMMA . ID ids

    ID              shift and go to state 37


state 30

    (18) atribuicoes -> ID EQUALS INTEGER . SEMICOLON

    SEMICOLON       shift and go to state 38


state 31

    (19) atribuicoes -> ID EQUALS FLOATN . SEMICOLON

    SEMICOLON       shift and go to state 39


state 32

    (33) if -> IF LPAREN condicao . RPAREN bloco
    (34) if -> IF LPAREN condicao . RPAREN bloco else

    RPAREN          shift and go to state 40


state 33

    (20) condicao -> ID . LT INTEGER
    (21) condicao -> ID . LE INTEGER
    (22) condicao -> ID . LT FLOATN
    (23) condicao -> ID . GT INTEGER
    (24) condicao -> ID . GE FLOATN
    (25) condicao -> ID . GE INTEGER
    (26) condicao -> ID . GT FLOATN
    (27) condicao -> ID . LE FLOATN

    LT              shift and go to state 41
    LE              shift and go to state 42
    GT              shift and go to state 43
    GE              shift and go to state 44


state 34

    (14) declaracoes -> tipo ID ids SEMICOLON .

    ID              reduce using rule 14 (declaracoes -> tipo ID ids SEMICOLON .)
    IF              reduce using rule 14 (declaracoes -> tipo ID ids SEMICOLON .)
    INT             reduce using rule 14 (declaracoes -> tipo ID ids SEMICOLON .)
    FLOAT           reduce using rule 14 (declaracoes -> tipo ID ids SEMICOLON .)
    CHAR            reduce using rule 14 (declaracoes -> tipo ID ids SEMICOLON .)
    RBRACES         reduce using rule 14 (declaracoes -> tipo ID ids SEMICOLON .)


state 35

    (15) declaracoes -> tipo ID EQUALS INTEGER . SEMICOLON

    SEMICOLON       shift and go to state 45


state 36

    (16) declaracoes -> tipo ID EQUALS FLOATN . SEMICOLON

    SEMICOLON       shift and go to state 46


state 37

    (10) ids -> COMMA ID .
    (11) ids -> COMMA ID . ids
    (10) ids -> . COMMA ID
    (11) ids -> . COMMA ID ids

    SEMICOLON       reduce using rule 10 (ids -> COMMA ID .)
    COMMA           shift and go to state 29

    ids                            shift and go to state 47

state 38

    (18) atribuicoes -> ID EQUALS INTEGER SEMICOLON .

    ID              reduce using rule 18 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    IF              reduce using rule 18 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    INT             reduce using rule 18 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    FLOAT           reduce using rule 18 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    CHAR            reduce using rule 18 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)
    RBRACES         reduce using rule 18 (atribuicoes -> ID EQUALS INTEGER SEMICOLON .)


state 39

    (19) atribuicoes -> ID EQUALS FLOATN SEMICOLON .

    ID              reduce using rule 19 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    IF              reduce using rule 19 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    INT             reduce using rule 19 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    FLOAT           reduce using rule 19 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    CHAR            reduce using rule 19 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)
    RBRACES         reduce using rule 19 (atribuicoes -> ID EQUALS FLOATN SEMICOLON .)


state 40

    (33) if -> IF LPAREN condicao RPAREN . bloco
    (34) if -> IF LPAREN condicao RPAREN . bloco else
    (28) bloco -> . LBRACES conteudo_if RBRACES

    LBRACES         shift and go to state 49

    bloco                          shift and go to state 48

state 41

    (20) condicao -> ID LT . INTEGER
    (22) condicao -> ID LT . FLOATN

    INTEGER         shift and go to state 50
    FLOATN          shift and go to state 51


state 42

    (21) condicao -> ID LE . INTEGER
    (27) condicao -> ID LE . FLOATN

    INTEGER         shift and go to state 52
    FLOATN          shift and go to state 53


state 43

    (23) condicao -> ID GT . INTEGER
    (26) condicao -> ID GT . FLOATN

    INTEGER         shift and go to state 54
    FLOATN          shift and go to state 55


state 44

    (24) condicao -> ID GE . FLOATN
    (25) condicao -> ID GE . INTEGER

    FLOATN          shift and go to state 56
    INTEGER         shift and go to state 57


state 45

    (15) declaracoes -> tipo ID EQUALS INTEGER SEMICOLON .

    ID              reduce using rule 15 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON .)
    IF              reduce using rule 15 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON .)
    INT             reduce using rule 15 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON .)
    FLOAT           reduce using rule 15 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON .)
    CHAR            reduce using rule 15 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON .)
    RBRACES         reduce using rule 15 (declaracoes -> tipo ID EQUALS INTEGER SEMICOLON .)


state 46

    (16) declaracoes -> tipo ID EQUALS FLOATN SEMICOLON .

    ID              reduce using rule 16 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON .)
    IF              reduce using rule 16 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON .)
    INT             reduce using rule 16 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON .)
    FLOAT           reduce using rule 16 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON .)
    CHAR            reduce using rule 16 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON .)
    RBRACES         reduce using rule 16 (declaracoes -> tipo ID EQUALS FLOATN SEMICOLON .)


state 47

    (11) ids -> COMMA ID ids .

    SEMICOLON       reduce using rule 11 (ids -> COMMA ID ids .)


state 48

    (33) if -> IF LPAREN condicao RPAREN bloco .
    (34) if -> IF LPAREN condicao RPAREN bloco . else
    (35) else -> . ELSE bloco

    ID              reduce using rule 33 (if -> IF LPAREN condicao RPAREN bloco .)
    IF              reduce using rule 33 (if -> IF LPAREN condicao RPAREN bloco .)
    INT             reduce using rule 33 (if -> IF LPAREN condicao RPAREN bloco .)
    FLOAT           reduce using rule 33 (if -> IF LPAREN condicao RPAREN bloco .)
    CHAR            reduce using rule 33 (if -> IF LPAREN condicao RPAREN bloco .)
    RBRACES         reduce using rule 33 (if -> IF LPAREN condicao RPAREN bloco .)
    ELSE            shift and go to state 59

    else                           shift and go to state 58

state 49

    (28) bloco -> LBRACES . conteudo_if RBRACES
    (29) conteudo_if -> . atribuicoes conteudo_if
    (30) conteudo_if -> . operacao conteudo_if
    (31) conteudo_if -> . if
    (32) conteudo_if -> . empty
    (18) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (19) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (33) if -> . IF LPAREN condicao RPAREN bloco
    (34) if -> . IF LPAREN condicao RPAREN bloco else
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    ID              shift and go to state 65
    IF              shift and go to state 15
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]
  ! IF              [ reduce using rule 12 (empty -> .) ]

    conteudo_if                    shift and go to state 60
    atribuicoes                    shift and go to state 61
    operacao                       shift and go to state 62
    if                             shift and go to state 63
    empty                          shift and go to state 64

state 50

    (20) condicao -> ID LT INTEGER .

    RPAREN          reduce using rule 20 (condicao -> ID LT INTEGER .)


state 51

    (22) condicao -> ID LT FLOATN .

    RPAREN          reduce using rule 22 (condicao -> ID LT FLOATN .)


state 52

    (21) condicao -> ID LE INTEGER .

    RPAREN          reduce using rule 21 (condicao -> ID LE INTEGER .)


state 53

    (27) condicao -> ID LE FLOATN .

    RPAREN          reduce using rule 27 (condicao -> ID LE FLOATN .)


state 54

    (23) condicao -> ID GT INTEGER .

    RPAREN          reduce using rule 23 (condicao -> ID GT INTEGER .)


state 55

    (26) condicao -> ID GT FLOATN .

    RPAREN          reduce using rule 26 (condicao -> ID GT FLOATN .)


state 56

    (24) condicao -> ID GE FLOATN .

    RPAREN          reduce using rule 24 (condicao -> ID GE FLOATN .)


state 57

    (25) condicao -> ID GE INTEGER .

    RPAREN          reduce using rule 25 (condicao -> ID GE INTEGER .)


state 58

    (34) if -> IF LPAREN condicao RPAREN bloco else .

    ID              reduce using rule 34 (if -> IF LPAREN condicao RPAREN bloco else .)
    IF              reduce using rule 34 (if -> IF LPAREN condicao RPAREN bloco else .)
    INT             reduce using rule 34 (if -> IF LPAREN condicao RPAREN bloco else .)
    FLOAT           reduce using rule 34 (if -> IF LPAREN condicao RPAREN bloco else .)
    CHAR            reduce using rule 34 (if -> IF LPAREN condicao RPAREN bloco else .)
    RBRACES         reduce using rule 34 (if -> IF LPAREN condicao RPAREN bloco else .)


state 59

    (35) else -> ELSE . bloco
    (28) bloco -> . LBRACES conteudo_if RBRACES

    LBRACES         shift and go to state 49

    bloco                          shift and go to state 66

state 60

    (28) bloco -> LBRACES conteudo_if . RBRACES

    RBRACES         shift and go to state 67


state 61

    (29) conteudo_if -> atribuicoes . conteudo_if
    (29) conteudo_if -> . atribuicoes conteudo_if
    (30) conteudo_if -> . operacao conteudo_if
    (31) conteudo_if -> . if
    (32) conteudo_if -> . empty
    (18) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (19) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (33) if -> . IF LPAREN condicao RPAREN bloco
    (34) if -> . IF LPAREN condicao RPAREN bloco else
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    ID              shift and go to state 65
    IF              shift and go to state 15
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]
  ! IF              [ reduce using rule 12 (empty -> .) ]

    atribuicoes                    shift and go to state 61
    conteudo_if                    shift and go to state 68
    operacao                       shift and go to state 62
    if                             shift and go to state 63
    empty                          shift and go to state 64

state 62

    (30) conteudo_if -> operacao . conteudo_if
    (29) conteudo_if -> . atribuicoes conteudo_if
    (30) conteudo_if -> . operacao conteudo_if
    (31) conteudo_if -> . if
    (32) conteudo_if -> . empty
    (18) atribuicoes -> . ID EQUALS INTEGER SEMICOLON
    (19) atribuicoes -> . ID EQUALS FLOATN SEMICOLON
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (33) if -> . IF LPAREN condicao RPAREN bloco
    (34) if -> . IF LPAREN condicao RPAREN bloco else
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    ID              shift and go to state 65
    IF              shift and go to state 15
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]
  ! IF              [ reduce using rule 12 (empty -> .) ]

    operacao                       shift and go to state 62
    conteudo_if                    shift and go to state 69
    atribuicoes                    shift and go to state 61
    if                             shift and go to state 63
    empty                          shift and go to state 64

state 63

    (31) conteudo_if -> if .

    RBRACES         reduce using rule 31 (conteudo_if -> if .)


state 64

    (32) conteudo_if -> empty .
    (48) operacao -> empty .

  ! reduce/reduce conflict for RBRACES resolved using rule 32 (conteudo_if -> empty .)
    RBRACES         reduce using rule 32 (conteudo_if -> empty .)
    ID              reduce using rule 48 (operacao -> empty .)
    IF              reduce using rule 48 (operacao -> empty .)

  ! RBRACES         [ reduce using rule 48 (operacao -> empty .) ]


state 65

    (18) atribuicoes -> ID . EQUALS INTEGER SEMICOLON
    (19) atribuicoes -> ID . EQUALS FLOATN SEMICOLON
    (41) operacao -> ID . EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> ID . EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> ID . EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> ID . EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> ID . EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> ID . EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> ID . EQUALS FLOATN operador ID SEMICOLON operacao

    EQUALS          shift and go to state 70


state 66

    (35) else -> ELSE bloco .

    ID              reduce using rule 35 (else -> ELSE bloco .)
    IF              reduce using rule 35 (else -> ELSE bloco .)
    INT             reduce using rule 35 (else -> ELSE bloco .)
    FLOAT           reduce using rule 35 (else -> ELSE bloco .)
    CHAR            reduce using rule 35 (else -> ELSE bloco .)
    RBRACES         reduce using rule 35 (else -> ELSE bloco .)


state 67

    (28) bloco -> LBRACES conteudo_if RBRACES .

    ELSE            reduce using rule 28 (bloco -> LBRACES conteudo_if RBRACES .)
    ID              reduce using rule 28 (bloco -> LBRACES conteudo_if RBRACES .)
    IF              reduce using rule 28 (bloco -> LBRACES conteudo_if RBRACES .)
    INT             reduce using rule 28 (bloco -> LBRACES conteudo_if RBRACES .)
    FLOAT           reduce using rule 28 (bloco -> LBRACES conteudo_if RBRACES .)
    CHAR            reduce using rule 28 (bloco -> LBRACES conteudo_if RBRACES .)
    RBRACES         reduce using rule 28 (bloco -> LBRACES conteudo_if RBRACES .)


state 68

    (29) conteudo_if -> atribuicoes conteudo_if .

    RBRACES         reduce using rule 29 (conteudo_if -> atribuicoes conteudo_if .)


state 69

    (30) conteudo_if -> operacao conteudo_if .

    RBRACES         reduce using rule 30 (conteudo_if -> operacao conteudo_if .)


state 70

    (18) atribuicoes -> ID EQUALS . INTEGER SEMICOLON
    (19) atribuicoes -> ID EQUALS . FLOATN SEMICOLON
    (41) operacao -> ID EQUALS . ID operador ID SEMICOLON operacao
    (42) operacao -> ID EQUALS . ID operador INTEGER SEMICOLON operacao
    (43) operacao -> ID EQUALS . ID operador FLOATN SEMICOLON operacao
    (44) operacao -> ID EQUALS . INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> ID EQUALS . FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> ID EQUALS . INTEGER operador ID SEMICOLON operacao
    (47) operacao -> ID EQUALS . FLOATN operador ID SEMICOLON operacao

    INTEGER         shift and go to state 72
    FLOATN          shift and go to state 73
    ID              shift and go to state 71


state 71

    (41) operacao -> ID EQUALS ID . operador ID SEMICOLON operacao
    (42) operacao -> ID EQUALS ID . operador INTEGER SEMICOLON operacao
    (43) operacao -> ID EQUALS ID . operador FLOATN SEMICOLON operacao
    (36) operador -> . PLUS
    (37) operador -> . MINUS
    (38) operador -> . TIMES
    (39) operador -> . POWER
    (40) operador -> . DIVIDE

    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    POWER           shift and go to state 78
    DIVIDE          shift and go to state 79

    operador                       shift and go to state 74

state 72

    (18) atribuicoes -> ID EQUALS INTEGER . SEMICOLON
    (44) operacao -> ID EQUALS INTEGER . operador INTEGER SEMICOLON operacao
    (46) operacao -> ID EQUALS INTEGER . operador ID SEMICOLON operacao
    (36) operador -> . PLUS
    (37) operador -> . MINUS
    (38) operador -> . TIMES
    (39) operador -> . POWER
    (40) operador -> . DIVIDE

    SEMICOLON       shift and go to state 38
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    POWER           shift and go to state 78
    DIVIDE          shift and go to state 79

    operador                       shift and go to state 80

state 73

    (19) atribuicoes -> ID EQUALS FLOATN . SEMICOLON
    (45) operacao -> ID EQUALS FLOATN . operador INTEGER SEMICOLON operacao
    (47) operacao -> ID EQUALS FLOATN . operador ID SEMICOLON operacao
    (36) operador -> . PLUS
    (37) operador -> . MINUS
    (38) operador -> . TIMES
    (39) operador -> . POWER
    (40) operador -> . DIVIDE

    SEMICOLON       shift and go to state 39
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    POWER           shift and go to state 78
    DIVIDE          shift and go to state 79

    operador                       shift and go to state 81

state 74

    (41) operacao -> ID EQUALS ID operador . ID SEMICOLON operacao
    (42) operacao -> ID EQUALS ID operador . INTEGER SEMICOLON operacao
    (43) operacao -> ID EQUALS ID operador . FLOATN SEMICOLON operacao

    ID              shift and go to state 82
    INTEGER         shift and go to state 83
    FLOATN          shift and go to state 84


state 75

    (36) operador -> PLUS .

    ID              reduce using rule 36 (operador -> PLUS .)
    INTEGER         reduce using rule 36 (operador -> PLUS .)
    FLOATN          reduce using rule 36 (operador -> PLUS .)


state 76

    (37) operador -> MINUS .

    ID              reduce using rule 37 (operador -> MINUS .)
    INTEGER         reduce using rule 37 (operador -> MINUS .)
    FLOATN          reduce using rule 37 (operador -> MINUS .)


state 77

    (38) operador -> TIMES .

    ID              reduce using rule 38 (operador -> TIMES .)
    INTEGER         reduce using rule 38 (operador -> TIMES .)
    FLOATN          reduce using rule 38 (operador -> TIMES .)


state 78

    (39) operador -> POWER .

    ID              reduce using rule 39 (operador -> POWER .)
    INTEGER         reduce using rule 39 (operador -> POWER .)
    FLOATN          reduce using rule 39 (operador -> POWER .)


state 79

    (40) operador -> DIVIDE .

    ID              reduce using rule 40 (operador -> DIVIDE .)
    INTEGER         reduce using rule 40 (operador -> DIVIDE .)
    FLOATN          reduce using rule 40 (operador -> DIVIDE .)


state 80

    (44) operacao -> ID EQUALS INTEGER operador . INTEGER SEMICOLON operacao
    (46) operacao -> ID EQUALS INTEGER operador . ID SEMICOLON operacao

    INTEGER         shift and go to state 86
    ID              shift and go to state 85


state 81

    (45) operacao -> ID EQUALS FLOATN operador . INTEGER SEMICOLON operacao
    (47) operacao -> ID EQUALS FLOATN operador . ID SEMICOLON operacao

    INTEGER         shift and go to state 88
    ID              shift and go to state 87


state 82

    (41) operacao -> ID EQUALS ID operador ID . SEMICOLON operacao

    SEMICOLON       shift and go to state 89


state 83

    (42) operacao -> ID EQUALS ID operador INTEGER . SEMICOLON operacao

    SEMICOLON       shift and go to state 90


state 84

    (43) operacao -> ID EQUALS ID operador FLOATN . SEMICOLON operacao

    SEMICOLON       shift and go to state 91


state 85

    (46) operacao -> ID EQUALS INTEGER operador ID . SEMICOLON operacao

    SEMICOLON       shift and go to state 92


state 86

    (44) operacao -> ID EQUALS INTEGER operador INTEGER . SEMICOLON operacao

    SEMICOLON       shift and go to state 93


state 87

    (47) operacao -> ID EQUALS FLOATN operador ID . SEMICOLON operacao

    SEMICOLON       shift and go to state 94


state 88

    (45) operacao -> ID EQUALS FLOATN operador INTEGER . SEMICOLON operacao

    SEMICOLON       shift and go to state 95


state 89

    (41) operacao -> ID EQUALS ID operador ID SEMICOLON . operacao
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 96
    IF              reduce using rule 12 (empty -> .)
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]

    operacao                       shift and go to state 97
    empty                          shift and go to state 98

state 90

    (42) operacao -> ID EQUALS ID operador INTEGER SEMICOLON . operacao
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 96
    IF              reduce using rule 12 (empty -> .)
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]

    operacao                       shift and go to state 99
    empty                          shift and go to state 98

state 91

    (43) operacao -> ID EQUALS ID operador FLOATN SEMICOLON . operacao
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 96
    IF              reduce using rule 12 (empty -> .)
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]

    operacao                       shift and go to state 100
    empty                          shift and go to state 98

state 92

    (46) operacao -> ID EQUALS INTEGER operador ID SEMICOLON . operacao
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 96
    IF              reduce using rule 12 (empty -> .)
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]

    operacao                       shift and go to state 101
    empty                          shift and go to state 98

state 93

    (44) operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON . operacao
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 96
    IF              reduce using rule 12 (empty -> .)
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]

    operacao                       shift and go to state 102
    empty                          shift and go to state 98

state 94

    (47) operacao -> ID EQUALS FLOATN operador ID SEMICOLON . operacao
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 96
    IF              reduce using rule 12 (empty -> .)
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]

    operacao                       shift and go to state 103
    empty                          shift and go to state 98

state 95

    (45) operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON . operacao
    (41) operacao -> . ID EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> . ID EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> . ID EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> . ID EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> . ID EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> . ID EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> . ID EQUALS FLOATN operador ID SEMICOLON operacao
    (48) operacao -> . empty
    (12) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 96
    IF              reduce using rule 12 (empty -> .)
    RBRACES         reduce using rule 12 (empty -> .)

  ! ID              [ reduce using rule 12 (empty -> .) ]

    operacao                       shift and go to state 104
    empty                          shift and go to state 98

state 96

    (41) operacao -> ID . EQUALS ID operador ID SEMICOLON operacao
    (42) operacao -> ID . EQUALS ID operador INTEGER SEMICOLON operacao
    (43) operacao -> ID . EQUALS ID operador FLOATN SEMICOLON operacao
    (44) operacao -> ID . EQUALS INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> ID . EQUALS FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> ID . EQUALS INTEGER operador ID SEMICOLON operacao
    (47) operacao -> ID . EQUALS FLOATN operador ID SEMICOLON operacao

    EQUALS          shift and go to state 105


state 97

    (41) operacao -> ID EQUALS ID operador ID SEMICOLON operacao .

    ID              reduce using rule 41 (operacao -> ID EQUALS ID operador ID SEMICOLON operacao .)
    IF              reduce using rule 41 (operacao -> ID EQUALS ID operador ID SEMICOLON operacao .)
    RBRACES         reduce using rule 41 (operacao -> ID EQUALS ID operador ID SEMICOLON operacao .)


state 98

    (48) operacao -> empty .

    ID              reduce using rule 48 (operacao -> empty .)
    IF              reduce using rule 48 (operacao -> empty .)
    RBRACES         reduce using rule 48 (operacao -> empty .)


state 99

    (42) operacao -> ID EQUALS ID operador INTEGER SEMICOLON operacao .

    ID              reduce using rule 42 (operacao -> ID EQUALS ID operador INTEGER SEMICOLON operacao .)
    IF              reduce using rule 42 (operacao -> ID EQUALS ID operador INTEGER SEMICOLON operacao .)
    RBRACES         reduce using rule 42 (operacao -> ID EQUALS ID operador INTEGER SEMICOLON operacao .)


state 100

    (43) operacao -> ID EQUALS ID operador FLOATN SEMICOLON operacao .

    ID              reduce using rule 43 (operacao -> ID EQUALS ID operador FLOATN SEMICOLON operacao .)
    IF              reduce using rule 43 (operacao -> ID EQUALS ID operador FLOATN SEMICOLON operacao .)
    RBRACES         reduce using rule 43 (operacao -> ID EQUALS ID operador FLOATN SEMICOLON operacao .)


state 101

    (46) operacao -> ID EQUALS INTEGER operador ID SEMICOLON operacao .

    ID              reduce using rule 46 (operacao -> ID EQUALS INTEGER operador ID SEMICOLON operacao .)
    IF              reduce using rule 46 (operacao -> ID EQUALS INTEGER operador ID SEMICOLON operacao .)
    RBRACES         reduce using rule 46 (operacao -> ID EQUALS INTEGER operador ID SEMICOLON operacao .)


state 102

    (44) operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON operacao .

    ID              reduce using rule 44 (operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON operacao .)
    IF              reduce using rule 44 (operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON operacao .)
    RBRACES         reduce using rule 44 (operacao -> ID EQUALS INTEGER operador INTEGER SEMICOLON operacao .)


state 103

    (47) operacao -> ID EQUALS FLOATN operador ID SEMICOLON operacao .

    ID              reduce using rule 47 (operacao -> ID EQUALS FLOATN operador ID SEMICOLON operacao .)
    IF              reduce using rule 47 (operacao -> ID EQUALS FLOATN operador ID SEMICOLON operacao .)
    RBRACES         reduce using rule 47 (operacao -> ID EQUALS FLOATN operador ID SEMICOLON operacao .)


state 104

    (45) operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON operacao .

    ID              reduce using rule 45 (operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON operacao .)
    IF              reduce using rule 45 (operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON operacao .)
    RBRACES         reduce using rule 45 (operacao -> ID EQUALS FLOATN operador INTEGER SEMICOLON operacao .)


state 105

    (41) operacao -> ID EQUALS . ID operador ID SEMICOLON operacao
    (42) operacao -> ID EQUALS . ID operador INTEGER SEMICOLON operacao
    (43) operacao -> ID EQUALS . ID operador FLOATN SEMICOLON operacao
    (44) operacao -> ID EQUALS . INTEGER operador INTEGER SEMICOLON operacao
    (45) operacao -> ID EQUALS . FLOATN operador INTEGER SEMICOLON operacao
    (46) operacao -> ID EQUALS . INTEGER operador ID SEMICOLON operacao
    (47) operacao -> ID EQUALS . FLOATN operador ID SEMICOLON operacao

    ID              shift and go to state 71
    INTEGER         shift and go to state 106
    FLOATN          shift and go to state 107


state 106

    (44) operacao -> ID EQUALS INTEGER . operador INTEGER SEMICOLON operacao
    (46) operacao -> ID EQUALS INTEGER . operador ID SEMICOLON operacao
    (36) operador -> . PLUS
    (37) operador -> . MINUS
    (38) operador -> . TIMES
    (39) operador -> . POWER
    (40) operador -> . DIVIDE

    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    POWER           shift and go to state 78
    DIVIDE          shift and go to state 79

    operador                       shift and go to state 80

state 107

    (45) operacao -> ID EQUALS FLOATN . operador INTEGER SEMICOLON operacao
    (47) operacao -> ID EQUALS FLOATN . operador ID SEMICOLON operacao
    (36) operador -> . PLUS
    (37) operador -> . MINUS
    (38) operador -> . TIMES
    (39) operador -> . POWER
    (40) operador -> . DIVIDE

    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    POWER           shift and go to state 78
    DIVIDE          shift and go to state 79

    operador                       shift and go to state 81
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 7 resolved as shift
WARNING: shift/reduce conflict for IF in state 7 resolved as shift
WARNING: shift/reduce conflict for INT in state 7 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 7 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for IF in state 9 resolved as shift
WARNING: shift/reduce conflict for INT in state 9 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 9 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 10 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 11 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 89 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
WARNING: shift/reduce conflict for ID in state 95 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (conteudo -> declaracoes)
WARNING: rejected rule (empty -> <empty>) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (conteudo -> atribuicoes)
WARNING: rejected rule (empty -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 11 resolved using rule (conteudo -> if)
WARNING: rejected rule (empty -> <empty>) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (conteudo -> empty)
WARNING: rejected rule (declaracoes -> empty) in state 12
WARNING: reduce/reduce conflict in state 64 resolved using rule (conteudo_if -> empty)
WARNING: rejected rule (operacao -> empty) in state 64
